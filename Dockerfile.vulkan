ARG BASE_IMAGE_BUILD=ubuntu:22.04
ARG BASE_IMAGE_RUN=ubuntu:22.04

FROM ${BASE_IMAGE_BUILD} AS build

WORKDIR /whisper.cpp

RUN apt update -y && apt install -y build-essential wget cmake git

RUN wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | tee /etc/apt/trusted.gpg.d/lunarg.asc

RUN wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.4.304-jammy.list https://packages.lunarg.com/vulkan/1.4.304/lunarg-vulkan-1.4.304-jammy.list

RUN apt update -y && apt install -y vulkan-sdk

RUN git clone https://github.com/ggerganov/whisper.cpp.git --depth 1 .

RUN cmake -B build -DGGML_VULKAN=1 -DCMAKE_BUILD_TYPE=Release && cmake --build build -j --config Release

FROM ${BASE_IMAGE_RUN} AS runtime

WORKDIR /whisper.cpp

RUN apt update -y && apt install -y curl ffmpeg wget cmake && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

# libvulkan
RUN wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | tee /etc/apt/trusted.gpg.d/lunarg.asc

RUN wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.4.304-jammy.list https://packages.lunarg.com/vulkan/1.4.304/lunarg-vulkan-1.4.304-jammy.list

RUN apt update -y && apt install -y vulkan-sdk

COPY --from=build /whisper.cpp /whisper.cpp

COPY ./start.sh ./start.sh

RUN chmod +x ./start.sh

ENTRYPOINT [ "bash", "-c" ]
CMD [ "./start.sh" ]
